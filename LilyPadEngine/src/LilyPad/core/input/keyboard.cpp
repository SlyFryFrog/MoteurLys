#include "keyboard.hpp"

namespace LilyPad
{
	Key convert_code(const unsigned int code)
	{
		switch (code)
		{
		case 0x0030:
			return Key::KEY_0;
		case 0x0031:
			return Key::KEY_1;
		case 0x0032:
			return Key::KEY_2;
		case 0x0033:
			return Key::KEY_3;
		case 0x0034:
			return Key::KEY_4;
		case 0x0035:
			return Key::KEY_5;
		case 0x0036:
			return Key::KEY_6;
		case 0x0037:
			return Key::KEY_7;
		case 0x0038:
			return Key::KEY_8;
		case 0x0039:
			return Key::KEY_9;
		case 0x003A:
			return Key::COLON;
		case 0x003B:
			return Key::SEMICOLON;
		case 0x003C:
			return Key::LESS;
		case 0x003D:
			return Key::EQUAL;
		case 0x003E:
			return Key::GREATER;
		case 0x003F:
			return Key::QUESTION;
		case 0x0040:
			return Key::AT;
		case 0x0041:
			return Key::A;
		case 0x0042:
			return Key::B;
		case 0x0043:
			return Key::C;
		case 0x0044:
			return Key::D;
		case 0x0045:
			return Key::E;
		case 0x0046:
			return Key::F;
		case 0x0047:
			return Key::G;
		case 0x0048:
			return Key::H;
		case 0x0049:
			return Key::I;
		case 0x004A:
			return Key::J;
		case 0x004B:
			return Key::K;
		case 0x004C:
			return Key::L;
		case 0x004D:
			return Key::M;
		case 0x004E:
			return Key::N;
		case 0x004F:
			return Key::O;
		case 0x0050:
			return Key::P;
		case 0x0051:
			return Key::Q;
		case 0x0052:
			return Key::R;
		case 0x0053:
			return Key::S;
		case 0x0054:
			return Key::T;
		case 0x0055:
			return Key::U;
		case 0x0056:
			return Key::V;
		case 0x0057:
			return Key::W;
		case 0x0058:
			return Key::X;
		case 0x0059:
			return Key::Y;
		case 0x005A:
			return Key::Z;
		case GLFW_KEY_F1:
			return Key::F1;
		case GLFW_KEY_F2:
			return Key::F2;
		case GLFW_KEY_F3:
			return Key::F3;
		case GLFW_KEY_F4:
			return Key::F4;
		case GLFW_KEY_F5:
			return Key::F5;
		case GLFW_KEY_F6:
			return Key::F6;
		case GLFW_KEY_F7:
			return Key::F7;
		case GLFW_KEY_F8:
			return Key::F8;
		case GLFW_KEY_F9:
			return Key::F9;
		case GLFW_KEY_F10:
			return Key::F10;
		case GLFW_KEY_F11:
			return Key::F11;
		case GLFW_KEY_F12:
			return Key::F12;
		case GLFW_KEY_F13:
			return Key::F13;
		case GLFW_KEY_F14:
			return Key::F14;
		case GLFW_KEY_F15:
			return Key::F15;
		case GLFW_KEY_F16:
			return Key::F16;
		case GLFW_KEY_F17:
			return Key::F17;
		case GLFW_KEY_F18:
			return Key::F18;
		case GLFW_KEY_F19:
			return Key::F19;
		case GLFW_KEY_F20:
			return Key::F20;
		case GLFW_KEY_F21:
			return Key::F21;
		case GLFW_KEY_F22:
			return Key::F22;
		case GLFW_KEY_F23:
			return Key::F23;
		case GLFW_KEY_F24:
			return Key::F24;
		case GLFW_KEY_F25:
			return Key::F25;
		case GLFW_KEY_LEFT_SHIFT:
		case GLFW_KEY_RIGHT_SHIFT:
			return Key::SHIFT;
		case GLFW_KEY_LEFT_ALT:
		case GLFW_KEY_RIGHT_ALT:
			return Key::ALT;
		case GLFW_KEY_LEFT_CONTROL:
		case GLFW_KEY_RIGHT_CONTROL:
			return Key::CONTROL;
		case GLFW_KEY_LEFT_SUPER:
		case GLFW_KEY_RIGHT_SUPER:
			return Key::SUPER;
		case GLFW_KEY_ESCAPE:
			return Key::ESCAPE;
		case GLFW_KEY_ENTER:
			return Key::ENTER;
		case GLFW_KEY_KP_0:
			return Key::KEY_PAD_0;
		case GLFW_KEY_KP_1:
			return Key::KEY_PAD_1;
		case GLFW_KEY_KP_2:
			return Key::KEY_PAD_2;
		case GLFW_KEY_KP_3:
			return Key::KEY_PAD_3;
		case GLFW_KEY_KP_4:
			return Key::KEY_PAD_4;
		case GLFW_KEY_KP_5:
			return Key::KEY_PAD_5;
		case GLFW_KEY_KP_6:
			return Key::KEY_PAD_6;
		case GLFW_KEY_KP_7:
			return Key::KEY_PAD_7;
		case GLFW_KEY_KP_8:
			return Key::KEY_PAD_8;
		case GLFW_KEY_KP_9:
			return Key::KEY_PAD_9;
		case GLFW_KEY_KP_DECIMAL:
		case GLFW_KEY_KP_DIVIDE:
		case GLFW_KEY_KP_MULTIPLY:
		case GLFW_KEY_KP_SUBTRACT:
		case GLFW_KEY_KP_ADD:
		case GLFW_KEY_KP_ENTER:
		case GLFW_KEY_KP_EQUAL:
		case GLFW_KEY_MENU:
		default:
			return Key::EMPTY; // Handle unexpected unique values
		}
	}
} // namespace LilyPad
