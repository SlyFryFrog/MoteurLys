<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classLilyPad_1_1ShaderProgram" kind="class" language="C++" prot="public">
    <compoundname>LilyPad::ShaderProgram</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classLilyPad_1_1ShaderProgram_1aa2c09aec9281a88bbc112f7f2d7f08cd" prot="public" static="no" mutable="no">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">unsigned</ref> <ref refid="classLilyPad_1_1Vertices" kindref="compound">int</ref></type>
        <definition>unsigned int LilyPad::ShaderProgram::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <qualifiedname>LilyPad::ShaderProgram::id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="24" column="14" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classLilyPad_1_1ShaderProgram_1a694101ad8e611913fe545c56ede45d9b" prot="private" static="no" mutable="no">
        <type><ref refid="classLilyPad_1_1Shader" kindref="compound">Shader</ref></type>
        <definition>Shader LilyPad::ShaderProgram::_vShader</definition>
        <argsstring></argsstring>
        <name>_vShader</name>
        <qualifiedname>LilyPad::ShaderProgram::_vShader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="53" column="8" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLilyPad_1_1ShaderProgram_1a52cb055341ec015567d25e6cd99e1edc" prot="private" static="no" mutable="no">
        <type><ref refid="classLilyPad_1_1Shader" kindref="compound">Shader</ref></type>
        <definition>Shader LilyPad::ShaderProgram::_fShader</definition>
        <argsstring></argsstring>
        <name>_fShader</name>
        <qualifiedname>LilyPad::ShaderProgram::_fShader</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="54" column="8" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classLilyPad_1_1ShaderProgram_1abd8128967a7bbb93778132f4c4089d38" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string LilyPad::ShaderProgram::_path</definition>
        <argsstring></argsstring>
        <name>_path</name>
        <qualifiedname>LilyPad::ShaderProgram::_path</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="55" column="13" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1aaa132b1483e616a49197825635a17b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LilyPad::ShaderProgram::ShaderProgram</definition>
        <argsstring>(const std::string &amp;path, const std::string &amp;vertex, const std::string &amp;fragment)</argsstring>
        <name>ShaderProgram</name>
        <qualifiedname>LilyPad::ShaderProgram::ShaderProgram</qualifiedname>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> std::string &amp;</type>
          <declname>vertex</declname>
        </param>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> std::string &amp;</type>
          <declname>fragment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="26" column="1" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1a4ade614de2e713fa3fff598c37afeb83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LilyPad::ShaderProgram::~ShaderProgram</definition>
        <argsstring>()</argsstring>
        <name>~ShaderProgram</name>
        <qualifiedname>LilyPad::ShaderProgram::~ShaderProgram</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="27" column="1" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1a75a8b6ae0d9ec249730c899a18bc9192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">void</ref></type>
        <definition>void LilyPad::ShaderProgram::create_shader_program</definition>
        <argsstring>()</argsstring>
        <name>create_shader_program</name>
        <qualifiedname>LilyPad::ShaderProgram::create_shader_program</qualifiedname>
        <briefdescription>
<para>Creates and links the shader program from the previously loaded vertex and fragment shaders. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="32" column="6" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="77" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1aaed566d2815201ac9096b180d042aba6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">void</ref></type>
        <definition>void LilyPad::ShaderProgram::use</definition>
        <argsstring>() const</argsstring>
        <name>use</name>
        <qualifiedname>LilyPad::ShaderProgram::use</qualifiedname>
        <briefdescription>
<para>Assigns the shader program to be used by OpenGL for rendering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="37" column="6" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1a2035b62cc94c13c411d781b083fb4270" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">int</ref></type>
        <definition>int LilyPad::ShaderProgram::get_attribute_location</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>get_attribute_location</name>
        <qualifiedname>LilyPad::ShaderProgram::get_attribute_location</qualifiedname>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="39" column="6" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1a7dce0ad7ceaef835081151b230c2b3a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">void</ref></type>
        <definition>void LilyPad::ShaderProgram::set_uniform</definition>
        <argsstring>(const std::string &amp;name, int value) const</argsstring>
        <name>set_uniform</name>
        <qualifiedname>LilyPad::ShaderProgram::set_uniform</qualifiedname>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">int</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="41" column="6" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1aa12325cd61096f5cb10ba10d91ca7541" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">void</ref></type>
        <definition>void LilyPad::ShaderProgram::set_uniform</definition>
        <argsstring>(const std::string &amp;name, unsigned int value) const</argsstring>
        <name>set_uniform</name>
        <qualifiedname>LilyPad::ShaderProgram::set_uniform</qualifiedname>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">unsigned</ref> <ref refid="classLilyPad_1_1Vertices" kindref="compound">int</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="42" column="6" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1a28d8a44512f66793b1eb6d671ed9cc21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">void</ref></type>
        <definition>void LilyPad::ShaderProgram::set_uniform</definition>
        <argsstring>(const std::string &amp;name, float value) const</argsstring>
        <name>set_uniform</name>
        <qualifiedname>LilyPad::ShaderProgram::set_uniform</qualifiedname>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">float</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="43" column="6" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1a397f58d7d664863b3b92d3d7f608d558" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">void</ref></type>
        <definition>void LilyPad::ShaderProgram::set_uniform</definition>
        <argsstring>(const std::string &amp;name, const glm::mat3 &amp;trans) const</argsstring>
        <name>set_uniform</name>
        <qualifiedname>LilyPad::ShaderProgram::set_uniform</qualifiedname>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> glm::mat3 &amp;</type>
          <declname>trans</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="44" column="6" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1aaf07838fe22fa2831bd68c1a89a5ddf4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">void</ref></type>
        <definition>void LilyPad::ShaderProgram::set_uniform</definition>
        <argsstring>(const std::string &amp;name, const glm::mat4 &amp;trans) const</argsstring>
        <name>set_uniform</name>
        <qualifiedname>LilyPad::ShaderProgram::set_uniform</qualifiedname>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> glm::mat4 &amp;</type>
          <declname>trans</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="45" column="6" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1a47103e80645b80914cc3078ef7c61e09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">void</ref></type>
        <definition>void LilyPad::ShaderProgram::reload</definition>
        <argsstring>()</argsstring>
        <name>reload</name>
        <qualifiedname>LilyPad::ShaderProgram::reload</qualifiedname>
        <briefdescription>
<para>If the last write time has changed, it gets and applies the new shader code to the program. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="50" column="6" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="132" bodyend="137"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1ad50ed96dfa9b5da43a2e2ca12a0a8393" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">int</ref></type>
        <definition>int LilyPad::ShaderProgram::check_compile_errors</definition>
        <argsstring>(unsigned int shader, unsigned int type)</argsstring>
        <name>check_compile_errors</name>
        <qualifiedname>LilyPad::ShaderProgram::check_compile_errors</qualifiedname>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">unsigned</ref> <ref refid="classLilyPad_1_1Vertices" kindref="compound">int</ref></type>
          <declname>shader</declname>
        </param>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">unsigned</ref> <ref refid="classLilyPad_1_1Vertices" kindref="compound">int</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Checks the compilation status of a shader and logs any errors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>shader</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the shader to check. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the shader (GL_VERTEX_SHADER or GL_FRAGMENT_SHADER). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int representing the sucess of the compilation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="64" column="12" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="48" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classLilyPad_1_1ShaderProgram_1a6ae5e153fbf45d999cecd41346881367" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">unsigned</ref> <ref refid="classLilyPad_1_1Vertices" kindref="compound">int</ref></type>
        <definition>unsigned int LilyPad::ShaderProgram::compile_shader</definition>
        <argsstring>(const std::string &amp;source, unsigned int type)</argsstring>
        <name>compile_shader</name>
        <qualifiedname>LilyPad::ShaderProgram::compile_shader</qualifiedname>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">const</ref> std::string &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="classLilyPad_1_1Vertices" kindref="compound">unsigned</ref> <ref refid="classLilyPad_1_1Vertices" kindref="compound">int</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Compiles a shader from the provided source code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The source code of the shader. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the shader (GL_VERTEX_SHADER or GL_FRAGMENT_SHADER). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>unsigned int The OpenGL ID of the compiled shader. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="73" column="21" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.cpp" bodystart="24" bodyend="39"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" line="21" column="1" bodyfile="LilyPadEngine/src/LilyPad/renderer/OpenGL/shaders/shader_program.hpp" bodystart="22" bodyend="74"/>
    <listofallmembers>
      <member refid="classLilyPad_1_1ShaderProgram_1a52cb055341ec015567d25e6cd99e1edc" prot="private" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>_fShader</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1abd8128967a7bbb93778132f4c4089d38" prot="private" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>_path</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1a694101ad8e611913fe545c56ede45d9b" prot="private" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>_vShader</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1ad50ed96dfa9b5da43a2e2ca12a0a8393" prot="private" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>check_compile_errors</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1a6ae5e153fbf45d999cecd41346881367" prot="private" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>compile_shader</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1a75a8b6ae0d9ec249730c899a18bc9192" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>create_shader_program</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1a2035b62cc94c13c411d781b083fb4270" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>get_attribute_location</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1aa2c09aec9281a88bbc112f7f2d7f08cd" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>id</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1a47103e80645b80914cc3078ef7c61e09" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>reload</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1a7dce0ad7ceaef835081151b230c2b3a2" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1aa12325cd61096f5cb10ba10d91ca7541" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1a28d8a44512f66793b1eb6d671ed9cc21" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1a397f58d7d664863b3b92d3d7f608d558" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1aaf07838fe22fa2831bd68c1a89a5ddf4" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>set_uniform</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1aaa132b1483e616a49197825635a17b4f" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>ShaderProgram</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1aaed566d2815201ac9096b180d042aba6" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>use</name></member>
      <member refid="classLilyPad_1_1ShaderProgram_1a4ade614de2e713fa3fff598c37afeb83" prot="public" virt="non-virtual"><scope>LilyPad::ShaderProgram</scope><name>~ShaderProgram</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
